{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport interact from \"interactjs\";\nexport default {\n  props: {\n    windowId: String,\n    nameOfWindow: String,\n    content_padding_left: {\n      required: false,\n      type: String,\n      default: \"15%\"\n    },\n    content_padding_right: {\n      required: false,\n      type: String,\n      default: \"15%\"\n    },\n    content_padding_top: {\n      required: false,\n      type: String,\n      default: \"5%\"\n    },\n    content_padding_bottom: {\n      required: false,\n      type: String,\n      default: \"5%\"\n    },\n    folderContent: {\n      required: true,\n      type: Array,\n      default: () => []\n    },\n    folderSize: {\n      required: false,\n      type: Number,\n      default: 0\n    }\n  },\n  data: function () {\n    return {\n      // ID Name of window (important)\n      ComponentName: this.nameOfWindow,\n      // window\n      Window: {},\n      dragOption: {\n        modifiers: [interact.modifiers.restrictRect({\n          restriction: \"#screen\",\n          endOnly: true\n        })],\n        allowFrom: \"#top-bar\"\n      },\n      // values for interact.js transformation\n      x: 0,\n      y: 0,\n      tempX: 0,\n      tempY: 0,\n      w: 0,\n      h: 0,\n      files: this.folderContent.sort((a, b) => a.title.localeCompare(b.title, undefined, {\n        numeric: true\n      })),\n      gridHeight: \"\",\n      size: this.folderSize\n    };\n  },\n  mounted() {\n    // assign the value of the heigh of the div file-explorer to the gridHeight variable\n    let gridH = this.$refs.fileExplorer.clientHeight;\n    this.gridHeight = gridH + \"px\";\n  },\n  computed: {\n    style() {\n      return {\n        height: `${this.h}px`,\n        width: `${this.w}px`,\n        transform: `translate(${this.x}px, ${this.y}px)`,\n        \"--content-padding-left\": this.content_padding_left || \"15%\",\n        \"--content-padding-right\": this.content_padding_right || \"15%\",\n        \"--content-padding-top\": this.content_padding_top || \"5%\",\n        \"--content-padding-bottom\": this.content_padding_bottom || \"5%\",\n        \"--fullscreen\": this.$store.getters.getFullscreenWindowHeight\n      };\n    }\n  },\n  created() {\n    this.window = this.$store.getters.getWindowById(this.ComponentName);\n  },\n  methods: {\n    // functions to interact with window state\n\n    closeWindow() {\n      const payload = {\n        windowState: \"close\",\n        windowID: this.ComponentName\n      };\n      this.$store.commit(\"setWindowState\", payload);\n    },\n    getRndInteger(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    },\n    openWindow(file) {\n      if (file.type == \"folder\") {\n        const windowId = \"FolderWindow\" + this.getRndInteger(1, 100000);\n        const addWindowPayload = {\n          windowId: windowId,\n          windowState: \"close\",\n          displayName: file.title,\n          windowComponent: \"FilesWindow\",\n          windowContent: \"\",\n          windowContentPadding: {\n            top: \"0px\",\n            right: \"0px\",\n            bottom: \"0px\",\n            left: \"0px\"\n          },\n          position: \"absolute\",\n          positionX: this.getRndInteger(1, 10) + \"vw\",\n          positionY: this.getRndInteger(1, 25) + \"vh\",\n          iconImage: \"folder.png\",\n          altText: file.title,\n          fullscreen: false,\n          showInAppGrid: false,\n          showInNavbar: true,\n          folderContent: file.content,\n          folderSize: file.size\n        };\n        const openWindowPayload = {\n          windowState: \"open\",\n          windowID: windowId\n        };\n        this.$store.commit(\"pushNewWindow\", addWindowPayload);\n        this.$store.commit(\"setWindowState\", openWindowPayload);\n        // this.files = file.content\n      } else if (file.type == \"video\") {\n        this.$store.commit(\"setCurrentVideo\", file.src);\n        const openWindowPayload = {\n          windowState: \"open\",\n          windowID: \"VideoPreviewWindow\"\n        };\n        this.$store.commit(\"setWindowState\", openWindowPayload);\n      } else {\n        const openWindowPayload = {\n          windowState: \"open\",\n          windowID: \"ImagePreviewWindow\"\n        };\n        // const contentPayload = this.files\n        const contentPayload = this.files.slice(this.files.indexOf(file));\n        contentPayload.push(...this.files.slice(0, this.files.indexOf(file)));\n        const payload = {\n          windowState: \"close\",\n          windowID: \"ImagePreviewWindow\"\n        };\n        this.$store.commit(\"setWindowState\", payload);\n        setTimeout(() => {\n          this.$store.commit(\"setPhotoFolderContent\", contentPayload);\n          // this.$store.commit('pushNewWindow', addWindowPayload)\n          this.$store.commit(\"setWindowState\", openWindowPayload);\n        }, 100);\n      }\n    },\n    convertBytestoMegabytes(bytes) {\n      if (bytes !== 0) {\n        return (bytes / 1000000).toFixed(2) + \"MB\";\n      } else {\n        return \"\";\n      }\n    },\n    setSize(file) {\n      this.size = file.size;\n    },\n    minimizeWindow() {\n      const payload = {\n        windowState: \"minimize\",\n        windowID: this.ComponentName\n      };\n      this.$store.commit(\"setWindowState\", payload);\n    },\n    toggleWindowSize() {\n      if (this.$store.getters.getWindowFullscreen(this.ComponentName) == true) {\n        const payload = {\n          fullscreen: false,\n          windowID: this.ComponentName\n        };\n        this.$store.commit(\"setFullscreen\", payload);\n        this.x = this.tempX;\n        this.y = this.tempY;\n      } else if (this.$store.getters.getWindowFullscreen(this.ComponentName) == false) {\n        const payload = {\n          fullscreen: true,\n          windowID: this.ComponentName\n        };\n        this.$store.commit(\"setFullscreen\", payload);\n        const tempX = this.x;\n        const tempY = this.y;\n        this.tempX = tempX;\n        this.tempY = tempY;\n        this.x = 0;\n        this.y = 0;\n      }\n    },\n    setActiveWindow() {\n      this.$store.commit(\"zIndexIncrement\", this.ComponentName);\n      this.$store.commit(\"setActiveWindow\", this.ComponentName);\n    },\n    // drag events\n\n    dragmove(event) {\n      this.x += event.dx;\n      this.y += event.dy;\n      this.setActiveWindow();\n    },\n    resizemove(event) {\n      this.w = event.rect.width;\n      this.h = event.rect.height;\n      this.x += event.deltaRect.left;\n      this.y += event.deltaRect.top;\n    }\n  }\n};","map":{"version":3,"names":["interact","props","windowId","String","nameOfWindow","content_padding_left","required","type","default","content_padding_right","content_padding_top","content_padding_bottom","folderContent","Array","folderSize","Number","data","ComponentName","Window","dragOption","modifiers","restrictRect","restriction","endOnly","allowFrom","x","y","tempX","tempY","w","h","files","sort","a","b","title","localeCompare","undefined","numeric","gridHeight","size","mounted","gridH","$refs","fileExplorer","clientHeight","computed","style","height","width","transform","$store","getters","getFullscreenWindowHeight","created","window","getWindowById","methods","closeWindow","payload","windowState","windowID","commit","getRndInteger","min","max","Math","floor","random","openWindow","file","addWindowPayload","displayName","windowComponent","windowContent","windowContentPadding","top","right","bottom","left","position","positionX","positionY","iconImage","altText","fullscreen","showInAppGrid","showInNavbar","content","openWindowPayload","src","contentPayload","slice","indexOf","push","setTimeout","convertBytestoMegabytes","bytes","toFixed","setSize","minimizeWindow","toggleWindowSize","getWindowFullscreen","setActiveWindow","dragmove","event","dx","dy","resizemove","rect","deltaRect"],"sources":["src/components/template/FilesWindow.vue"],"sourcesContent":["<template>\r\n  <interact\r\n    draggable\r\n    :dragOption=\"dragOption\"\r\n    class=\"window window-style\"\r\n    :style=\"style\"\r\n    @dragmove=\"dragmove\"\r\n    @resizemove=\"resizemove\"\r\n    @click.native=\"setActiveWindow\"\r\n    :class=\"{\r\n      fullscreen: $store.getters.getWindowFullscreen(this.ComponentName),\r\n      minimize:\r\n        $store.getters.getWindowById(ComponentName).windowState == 'minimize',\r\n    }\"\r\n  >\r\n    <div\r\n      class=\"top-bar-window\"\r\n      :class=\"\r\n        $store.getters.getActiveWindow == this.ComponentName\r\n          ? 'top-bar'\r\n          : 'top-bar-deactivated'\r\n      \"\r\n      id=\"top-bar\"\r\n      @dblclick=\"toggleWindowSize\"\r\n    >\r\n      <div class=\"window-name\">\r\n        <img\r\n          class=\"icon-image\"\r\n          :src=\"require('@/assets/win95Icons/' + this.window.iconImage)\"\r\n          :alt=\"window.altText\"\r\n        />{{ this.window.displayName }}\r\n      </div>\r\n      <!-- <div class=\"window-name\">{{this.window.displayName}}</div> -->\r\n      <div class=\"triple-button\">\r\n        <button class=\"minimize-button button\" @click=\"minimizeWindow\">\r\n          <span\r\n            style=\"\r\n              height: 2px;\r\n              width: 6px;\r\n              background: black;\r\n              margin-top: 8px;\r\n              margin-right: 2px;\r\n            \"\r\n          >\r\n          </span>\r\n        </button>\r\n        <button class=\"expand-button button\" @click=\"toggleWindowSize\">\r\n          <span\r\n            style=\"\r\n              height: 8px;\r\n              width: 9px;\r\n              border-left: black 1px solid;\r\n              border-right: black 1px solid;\r\n              border-left: black 1px solid;\r\n              border-bottom: black 1px solid;\r\n              border-top: black 2px solid;\r\n            \"\r\n          >\r\n          </span>\r\n        </button>\r\n        <button\r\n          class=\"close-button button\"\r\n          style=\"margin-right: 3px; padding-left: 1px\"\r\n          @click=\"closeWindow\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"content\">\r\n      <div class=\"top-bar-nav\">\r\n        <div class=\"top-bar-text\">\r\n          <span style=\"margin-right: 12px\"><u>F</u>ile </span>\r\n          <span style=\"margin-right: 12px\"><u>E</u>dit </span>\r\n          <span style=\"margin-right: 12px\"><u>V</u>iew </span>\r\n          <span style=\"margin-right: 12px\"><u>H</u>elp </span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"file-explorer\"\r\n        @click.self=\"size = folderSize\"\r\n        ref=\"fileExplorer\"\r\n      >\r\n        <nav class=\"grid-container-photos\" :style=\"{ height: gridHeight }\">\r\n          <li v-for=\"file in files\" :key=\"file.key\">\r\n            <button\r\n              class=\"icon-photos\"\r\n              @click=\"setSize(file)\"\r\n              @touchstart=\"openWindow(file)\"\r\n              @dblclick=\"openWindow(file)\"\r\n            >\r\n              <img\r\n                v-if=\"file.type == 'file'\"\r\n                class=\"icon-image-photos\"\r\n                :src=\"require('../../assets/win95Icons/image.png')\"\r\n                :alt=\"file.altText\"\r\n              />\r\n              <img\r\n                v-else-if=\"file.type == 'folder'\"\r\n                class=\"icon-image-photos\"\r\n                :src=\"require('../../assets/win95Icons/folder.png')\"\r\n                :alt=\"file.altText\"\r\n              />\r\n              <img\r\n                v-else-if=\"file.type == 'video'\"\r\n                class=\"icon-image-photos\"\r\n                :src=\"require('../../assets/win95Icons/video.png')\"\r\n                :alt=\"file.altText\"\r\n              />\r\n              <div class=\"border\">\r\n                <p class=\"icon-text\">\r\n                  {{ file.title }}\r\n                </p>\r\n              </div>\r\n            </button>\r\n          </li>\r\n        </nav>\r\n      </div>\r\n      <div class=\"bottom-bar\">\r\n        <div class=\"left-bar bar\">{{ files.length }} object(s)</div>\r\n        <div class=\"right-bar bar\">\r\n          {{ convertBytestoMegabytes(size) }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </interact>\r\n</template>\r\n\r\n<style scoped>\r\n.icon-text {\r\n  white-space: nowrap;\r\n  display: block;\r\n  overflow: hidden;\r\n  width: 60px !important;\r\n  font-size: 12px;\r\n  font-weight: 300;\r\n  color: black;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.icon-photos {\r\n  color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n  align-items: center;\r\n  text-align: center;\r\n  width: 60px;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.icon-photos:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.icon-photos:focus .icon-image-photos {\r\n  filter: grayscale(100%) brightness(30%) sepia(100%) hue-rotate(-180deg)\r\n    saturate(400%) contrast(0.9);\r\n}\r\n\r\n.icon-photos:focus .icon-text {\r\n  background: rgb(0, 0, 118);\r\n  color: white;\r\n  margin: 0px;\r\n}\r\n\r\n.icon-photos:focus .border {\r\n  border: rgb(0, 0, 0) dotted 1px;\r\n}\r\n\r\n.icon-image-photos {\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.grid-container-photos {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  height: 0 !important;\r\n}\r\n\r\n/*-------------------------------------------*\\\r\n            Windows/Display\r\n        \\*-------------------------------------------*/\r\n\r\n.minimize {\r\n  display: none;\r\n}\r\n\r\n.window {\r\n  box-sizing: border-box;\r\n  padding: 0px;\r\n  margin: 0px;\r\n  user-select: none;\r\n  -ms-touch-action: none;\r\n  touch-action: none;\r\n  flex-flow: column;\r\n  display: flex;\r\n  min-height: 350px;\r\n  min-width: 400px;\r\n  max-width: 100vw !important;\r\n  max-height: 100vh !important;\r\n  flex-direction: column;\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n  .window {\r\n    min-width: 80vw;\r\n  }\r\n}\r\n\r\n.fullscreen {\r\n  width: 100% !important;\r\n  height: var(--fullscreen) !important;\r\n  margin: 0;\r\n  transition: all 0.5s ease;\r\n  padding: 0;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1;\r\n  overflow-x: hidden;\r\n  padding-right: var(--content-padding-right);\r\n  padding-left: var(--content-padding-left);\r\n  padding-top: var(--content-padding-top);\r\n  padding-bottom: var(--content-padding-bottom);\r\n}\r\n\r\n.file-explorer {\r\n  background: white;\r\n  box-shadow: none;\r\n  border-top: solid rgb(0, 0, 0) 1.5px;\r\n  border-left: solid rgb(0, 0, 0) 1.5px;\r\n  border-bottom: solid rgb(250, 250, 250) 1.5px;\r\n  border-right: solid rgb(250, 250, 250) 1.5px;\r\n  height: calc(100% - 64px);\r\n  width: auto;\r\n  z-index: 10;\r\n  margin: 2px;\r\n  padding: 2px 2px 2px 2px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.top-bar-nav {\r\n  display: flex;\r\n  height: 22px;\r\n  width: 100%;\r\n}\r\n\r\n.top-bar-text {\r\n  height: 100%;\r\n  padding-left: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.bottom-bar {\r\n  height: 22px;\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n\r\n.bar {\r\n  height: 100%;\r\n  margin: 2px 2px 2px 2px;\r\n  padding: 0px 2px 1px 0px;\r\n  box-shadow: none;\r\n  border-top: solid rgb(0, 0, 0) 1.5px;\r\n  border-left: solid rgb(0, 0, 0) 1.5px;\r\n  border-bottom: solid rgb(250, 250, 250) 1.5px;\r\n  border-right: solid rgb(250, 250, 250) 1.5px;\r\n}\r\n\r\n.left-bar {\r\n  width: 100%;\r\n  padding-left: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.right-bar {\r\n  width: 100%;\r\n  padding-left: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n}\r\n\r\n/*-------------------------------------------*\\\r\n            Top Bar\r\n        \\*-------------------------------------------*/\r\n\r\n.top-bar {\r\n  background: rgb(0, 0, 124);\r\n}\r\n\r\n.icon-image {\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-right: 5px;\r\n}\r\n\r\n.top-bar-window {\r\n  display: flex;\r\n  width: auto;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  z-index: 10;\r\n  margin: 2px;\r\n  padding: 2px 2px 2px 2px;\r\n}\r\n\r\n.top-bar-deactivated {\r\n  background: rgb(123, 125, 123);\r\n}\r\n\r\n.top-bar:hover {\r\n  cursor: default;\r\n}\r\n\r\n.window-name {\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: 500;\r\n  padding: 0;\r\n  font-size: 16px;\r\n  margin: 0 0 0 3px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.icon-image {\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-right: 5px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport interact from \"interactjs\";\r\nexport default {\r\n  props: {\r\n    windowId: String,\r\n    nameOfWindow: String,\r\n    content_padding_left: {\r\n      required: false,\r\n      type: String,\r\n      default: \"15%\",\r\n    },\r\n    content_padding_right: {\r\n      required: false,\r\n      type: String,\r\n      default: \"15%\",\r\n    },\r\n    content_padding_top: {\r\n      required: false,\r\n      type: String,\r\n      default: \"5%\",\r\n    },\r\n    content_padding_bottom: {\r\n      required: false,\r\n      type: String,\r\n      default: \"5%\",\r\n    },\r\n    folderContent: {\r\n      required: true,\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    folderSize: {\r\n      required: false,\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n  },\r\n  data: function () {\r\n    return {\r\n      // ID Name of window (important)\r\n      ComponentName: this.nameOfWindow,\r\n\r\n      // window\r\n      Window: {},\r\n\r\n      dragOption: {\r\n        modifiers: [\r\n          interact.modifiers.restrictRect({\r\n            restriction: \"#screen\",\r\n            endOnly: true,\r\n          }),\r\n        ],\r\n        allowFrom: \"#top-bar\",\r\n      },\r\n      // values for interact.js transformation\r\n      x: 0,\r\n      y: 0,\r\n      tempX: 0,\r\n      tempY: 0,\r\n      w: 0,\r\n      h: 0,\r\n\r\n      files: this.folderContent.sort((a, b) =>\r\n        a.title.localeCompare(b.title, undefined, { numeric: true })\r\n      ),\r\n      gridHeight: \"\",\r\n      size: this.folderSize,\r\n    };\r\n  },\r\n  mounted() {\r\n    // assign the value of the heigh of the div file-explorer to the gridHeight variable\r\n    let gridH = this.$refs.fileExplorer.clientHeight;\r\n    this.gridHeight = gridH + \"px\";\r\n  },\r\n  computed: {\r\n    style() {\r\n      return {\r\n        height: `${this.h}px`,\r\n        width: `${this.w}px`,\r\n        transform: `translate(${this.x}px, ${this.y}px)`,\r\n        \"--content-padding-left\": this.content_padding_left || \"15%\",\r\n        \"--content-padding-right\": this.content_padding_right || \"15%\",\r\n        \"--content-padding-top\": this.content_padding_top || \"5%\",\r\n        \"--content-padding-bottom\": this.content_padding_bottom || \"5%\",\r\n        \"--fullscreen\": this.$store.getters.getFullscreenWindowHeight,\r\n      };\r\n    },\r\n  },\r\n  created() {\r\n    this.window = this.$store.getters.getWindowById(this.ComponentName);\r\n  },\r\n  methods: {\r\n    // functions to interact with window state\r\n\r\n    closeWindow() {\r\n      const payload = {\r\n        windowState: \"close\",\r\n        windowID: this.ComponentName,\r\n      };\r\n      this.$store.commit(\"setWindowState\", payload);\r\n    },\r\n\r\n    getRndInteger(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    },\r\n\r\n    openWindow(file) {\r\n      if (file.type == \"folder\") {\r\n        const windowId = \"FolderWindow\" + this.getRndInteger(1, 100000);\r\n        const addWindowPayload = {\r\n          windowId: windowId,\r\n          windowState: \"close\",\r\n          displayName: file.title,\r\n          windowComponent: \"FilesWindow\",\r\n          windowContent: \"\",\r\n          windowContentPadding: {\r\n            top: \"0px\",\r\n            right: \"0px\",\r\n            bottom: \"0px\",\r\n            left: \"0px\",\r\n          },\r\n          position: \"absolute\",\r\n          positionX: this.getRndInteger(1, 10) + \"vw\",\r\n          positionY: this.getRndInteger(1, 25) + \"vh\",\r\n          iconImage: \"folder.png\",\r\n          altText: file.title,\r\n          fullscreen: false,\r\n          showInAppGrid: false,\r\n          showInNavbar: true,\r\n          folderContent: file.content,\r\n          folderSize: file.size,\r\n        };\r\n        const openWindowPayload = {\r\n          windowState: \"open\",\r\n          windowID: windowId,\r\n        };\r\n        this.$store.commit(\"pushNewWindow\", addWindowPayload);\r\n        this.$store.commit(\"setWindowState\", openWindowPayload);\r\n        // this.files = file.content\r\n      } else if (file.type == \"video\") {\r\n        this.$store.commit(\"setCurrentVideo\", file.src);\r\n        const openWindowPayload = {\r\n          windowState: \"open\",\r\n          windowID: \"VideoPreviewWindow\",\r\n        };\r\n        this.$store.commit(\"setWindowState\", openWindowPayload);\r\n      } else {\r\n        const openWindowPayload = {\r\n          windowState: \"open\",\r\n          windowID: \"ImagePreviewWindow\",\r\n        };\r\n        // const contentPayload = this.files\r\n        const contentPayload = this.files.slice(this.files.indexOf(file));\r\n        contentPayload.push(...this.files.slice(0, this.files.indexOf(file)));\r\n        const payload = {\r\n          windowState: \"close\",\r\n          windowID: \"ImagePreviewWindow\",\r\n        };\r\n        this.$store.commit(\"setWindowState\", payload);\r\n        setTimeout(() => {\r\n          this.$store.commit(\"setPhotoFolderContent\", contentPayload);\r\n          // this.$store.commit('pushNewWindow', addWindowPayload)\r\n          this.$store.commit(\"setWindowState\", openWindowPayload);\r\n        }, 100);\r\n      }\r\n    },\r\n\r\n    convertBytestoMegabytes(bytes) {\r\n      if (bytes !== 0) {\r\n        return (bytes / 1000000).toFixed(2) + \"MB\";\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n\r\n    setSize(file) {\r\n      this.size = file.size;\r\n    },\r\n\r\n    minimizeWindow() {\r\n      const payload = {\r\n        windowState: \"minimize\",\r\n        windowID: this.ComponentName,\r\n      };\r\n      this.$store.commit(\"setWindowState\", payload);\r\n    },\r\n\r\n    toggleWindowSize() {\r\n      if (this.$store.getters.getWindowFullscreen(this.ComponentName) == true) {\r\n        const payload = {\r\n          fullscreen: false,\r\n          windowID: this.ComponentName,\r\n        };\r\n        this.$store.commit(\"setFullscreen\", payload);\r\n        this.x = this.tempX;\r\n        this.y = this.tempY;\r\n      } else if (\r\n        this.$store.getters.getWindowFullscreen(this.ComponentName) == false\r\n      ) {\r\n        const payload = {\r\n          fullscreen: true,\r\n          windowID: this.ComponentName,\r\n        };\r\n        this.$store.commit(\"setFullscreen\", payload);\r\n        const tempX = this.x;\r\n        const tempY = this.y;\r\n        this.tempX = tempX;\r\n        this.tempY = tempY;\r\n        this.x = 0;\r\n        this.y = 0;\r\n      }\r\n    },\r\n\r\n    setActiveWindow() {\r\n      this.$store.commit(\"zIndexIncrement\", this.ComponentName);\r\n      this.$store.commit(\"setActiveWindow\", this.ComponentName);\r\n    },\r\n\r\n    // drag events\r\n\r\n    dragmove(event) {\r\n      this.x += event.dx;\r\n      this.y += event.dy;\r\n      this.setActiveWindow();\r\n    },\r\n\r\n    resizemove(event) {\r\n      this.w = event.rect.width;\r\n      this.h = event.rect.height;\r\n\r\n      this.x += event.deltaRect.left;\r\n      this.y += event.deltaRect.top;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}