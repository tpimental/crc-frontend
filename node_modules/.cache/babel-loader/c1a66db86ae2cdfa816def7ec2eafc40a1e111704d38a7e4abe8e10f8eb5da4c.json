{"ast":null,"code":"/*------------------------------------------------------------*\\\r\n    Import Components, you can change the path for different\r\n    component themes (blueprint, windows, macos)\r\n\\*------------------------------------------------------------*/\nimport Navbar from \"./components/windows/Navbar\";\n// import TopNavbar from './components/macos/TopNavbar.vue'\nimport Window from \"./components/template/Window\";\nimport AppGrid from \"./components/AppGrid\";\nimport FilesWindow from \"./components/template/FilesWindow.vue\";\nimport ImagePreviewWindow from \"./components/template/ImagePreviewWindow.vue\";\nimport Placeholder from \"./components/views/Placeholder\";\nimport Photos from \"./components/views/Photos\";\nimport Bio from \"./components/views/Bio\";\nimport Resume from \"./components/views/Resume\";\nimport Nossaflex from \"./components/views/Nossaflex\";\nimport Mail from \"./components/template/Mail\";\nimport StartMenu from \"./components/StartMenu.vue\";\nimport Webos from \"./components/template/WebOS\";\nimport Opensource from \"./components/views/Opensource\";\nimport Wwdc2021 from \"./components/views/Wwdc2021\";\nimport Wwdc2022 from \"./components/views/Wwdc2022\";\nexport default {\n  name: \"App\",\n  data: function () {\n    return {\n      windows: this.$store.getters.getWindows,\n      windowComponents: {}\n    };\n  },\n  components: {\n    Window,\n    Navbar,\n    AppGrid,\n    Placeholder,\n    FilesWindow,\n    ImagePreviewWindow,\n    Photos,\n    Bio,\n    Resume,\n    Nossaflex,\n    Mail,\n    StartMenu,\n    Webos,\n    Opensource,\n    Wwdc2021,\n    Wwdc2022\n    // TopNavbar,\n  },\n\n  computed: {\n    style() {\n      return {\n        \"--fullscreen\": this.$store.getters.getFullscreenWindowHeight\n      };\n    }\n  },\n  mounted() {\n    /*-------------------------------------------------*\\\r\n            This fixes height problems for mobile devices \r\n              Code is detecting height of navbar and setting\r\n            respective heights of screen\r\n        \\*-------------------------------------------------*/\n\n    let navbar = document.getElementById(\"navbar\");\n    let topnavbar = document.getElementById(\"top-navbar\");\n    let topNavbarHeight = topnavbar.clientHeight;\n    let navbarHeight = navbar.clientHeight;\n    document.getElementById(\"screen\").style.height = window.innerHeight - navbarHeight - topNavbarHeight + \"px\";\n    window.addEventListener(\"resize\", () => {\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n    });\n    function resetHeight() {\n      document.body.style.height = window.innerHeight + \"px\";\n      document.html.style.height = window.innerHeight + \"px\";\n    }\n    window.addEventListener(\"resize\", resetHeight);\n    this.$store.commit(\"setFullscreenWindowHeight\", window.innerHeight - navbarHeight - topNavbarHeight + \"px\");\n    const newPhotoWindowPayload = {\n      windowId: \"PhotosWindow\",\n      windowState: \"close\",\n      displayName: \"Photos\",\n      windowComponent: \"FilesWindow\",\n      windowContent: \"\",\n      windowContentPadding: {\n        top: \"0px\",\n        right: \"0px\",\n        bottom: \"0px\",\n        left: \"0px\"\n      },\n      position: \"absolute\",\n      positionX: \"6vw\",\n      positionY: \"12vh\",\n      iconImage: \"photos.png\",\n      altText: \"Photos\",\n      fullscreen: false,\n      showInAppGrid: true,\n      showInNavbar: true,\n      // imagePreview: '',\n      folderContent: this.$store.getters.getPhotoFiles,\n      folderSize: 239217323\n    };\n    this.$store.commit(\"pushNewWindow\", newPhotoWindowPayload);\n    this.openWindow(\"BiographyWindow\");\n  },\n  methods: {\n    openWindow(windowId) {\n      const payload = {\n        windowState: \"open\",\n        windowID: windowId\n      };\n      this.$store.commit(\"setWindowState\", payload);\n    },\n    windowCheck(windowId) {\n      if (this.$store.getters.getWindowById(windowId).windowState == \"open\") {\n        return true;\n      }\n    },\n    deinitWindows() {\n      if (this.$store.getters.getActiveWindow == \"Menu\") {\n        console.log(\"deinitWindows\");\n        this.$store.commit(\"setActiveWindow\", \"\");\n        setTimeout(() => {\n          this.$store.commit(\"zIndexIncrement\", \"\");\n        }, 0);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Navbar","Window","AppGrid","FilesWindow","ImagePreviewWindow","Placeholder","Photos","Bio","Resume","Nossaflex","Mail","StartMenu","Webos","Opensource","Wwdc2021","Wwdc2022","name","data","windows","$store","getters","getWindows","windowComponents","components","computed","style","getFullscreenWindowHeight","mounted","navbar","document","getElementById","topnavbar","topNavbarHeight","clientHeight","navbarHeight","height","window","innerHeight","addEventListener","vh","documentElement","setProperty","resetHeight","body","html","commit","newPhotoWindowPayload","windowId","windowState","displayName","windowComponent","windowContent","windowContentPadding","top","right","bottom","left","position","positionX","positionY","iconImage","altText","fullscreen","showInAppGrid","showInNavbar","folderContent","getPhotoFiles","folderSize","openWindow","methods","payload","windowID","windowCheck","getWindowById","deinitWindows","getActiveWindow","console","log","setTimeout"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <top-navbar id=\"top-navbar\"></top-navbar>\r\n    <div class=\"screen\" id=\"screen\" @click=\"deinitWindows\">\r\n      <div\r\n        v-for=\"window in windows\"\r\n        :key=\"window.key\"\r\n        :aria-label=\"window.displayName\"\r\n      >\r\n        <component\r\n          :is=\"window.windowComponent\"\r\n          :nameOfWindow=\"window.windowId\"\r\n          :content_padding_bottom=\"window.windowContentPadding['bottom']\"\r\n          :content_padding_left=\"window.windowContentPadding['left']\"\r\n          :content_padding_right=\"window.windowContentPadding['right']\"\r\n          :content_padding_top=\"window.windowContentPadding['top']\"\r\n          :id=\"window.windowId\"\r\n          :style=\"{\r\n            position: window.position,\r\n            left: window.positionX,\r\n            top: window.positionY,\r\n          }\"\r\n          :folderContent=\"window.folderContent\"\r\n          :folderSize=\"window.folderSize\"\r\n          v-if=\"windowCheck(window.windowId)\"\r\n        >\r\n          <component :is=\"window.windowContent\" slot=\"content\"> </component>\r\n        </component>\r\n      </div>\r\n      <app-grid></app-grid>\r\n    </div>\r\n    <StartMenu\r\n      v-if=\"$store.getters.getActiveWindow == 'Menu'\"\r\n      style=\"position: absolute; z-index: 9999; left: 0; bottom: 39px\"\r\n    ></StartMenu>\r\n    <navbar style=\"position: absolute; bottom: 0; z-index: 9999\" id=\"navbar\" />\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n/*---------------------------------------------------------------------------*\\\r\n    CSS Imports\r\n    Change 'blueprint' to 'windows' or 'macos' to use windows or macos theme\r\n\\*---------------------------------------------------------------------------*/\r\n@import \"./assets/css/utils/normalize.css\";\r\n@import \"./assets/css/windows/app.css\";\r\n@import \"./assets/css/windows/window.css\";\r\n@import \"./assets/css/windows/appgrid.css\";\r\n\r\n@font-face {\r\n  font-family: \"MS Sans Serif\";\r\n  src: url(\"~@/assets/fonts/MS-Sans-Serif.ttf\");\r\n}\r\n\r\n/*-------------------------------------------*\\\r\n    Utilities\r\n\\*-------------------------------------------*/\r\n\r\nhtml {\r\n  overflow: hidden;\r\n}\r\n\r\n#app {\r\n  font-family: \"MS Sans Serif\";\r\n  font-weight: 400;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  display: flex;\r\n  width: 100%;\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  flex-direction: column;\r\n}\r\n\r\n.screen {\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 999;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n  width: 15px;\r\n  background: repeating-conic-gradient(\r\n      rgb(189, 190, 189) 0% 25%,\r\n      rgb(255, 255, 255) 0% 50%\r\n    )\r\n    50% / 2px 2px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  background: rgb(189, 190, 189);\r\n  /* box-shadow: 1.5px 1.5px black; */\r\n  border-top: solid rgb(250, 250, 250) 1.5px;\r\n  border-left: solid rgb(250, 250, 250) 1.5px;\r\n  border-bottom: solid rgb(90, 90, 90) 1.5px;\r\n  border-right: solid rgb(90, 90, 90) 1.5px;\r\n  outline: rgb(219, 219, 219);\r\n}\r\n\r\n/*-------------------------------------------*\\\r\n    Fullscreen\r\n\\*-------------------------------------------*/\r\n\r\n.fullscreen {\r\n  left: 0 !important;\r\n  position: relative;\r\n  display: block;\r\n  top: 0 !important;\r\n  right: 0 !important;\r\n}\r\n</style>\r\n\r\n<script>\r\n/*------------------------------------------------------------*\\\r\n    Import Components, you can change the path for different\r\n    component themes (blueprint, windows, macos)\r\n\\*------------------------------------------------------------*/\r\nimport Navbar from \"./components/windows/Navbar\";\r\n// import TopNavbar from './components/macos/TopNavbar.vue'\r\nimport Window from \"./components/template/Window\";\r\nimport AppGrid from \"./components/AppGrid\";\r\nimport FilesWindow from \"./components/template/FilesWindow.vue\";\r\nimport ImagePreviewWindow from \"./components/template/ImagePreviewWindow.vue\";\r\nimport Placeholder from \"./components/views/Placeholder\";\r\nimport Photos from \"./components/views/Photos\";\r\nimport Bio from \"./components/views/Bio\";\r\nimport Resume from \"./components/views/Resume\";\r\nimport Nossaflex from \"./components/views/Nossaflex\";\r\nimport Mail from \"./components/template/Mail\";\r\nimport StartMenu from \"./components/StartMenu.vue\";\r\nimport Webos from \"./components/template/WebOS\";\r\nimport Opensource from \"./components/views/Opensource\";\r\nimport Wwdc2021 from \"./components/views/Wwdc2021\";\r\nimport Wwdc2022 from \"./components/views/Wwdc2022\";\r\nexport default {\r\n  name: \"App\",\r\n  data: function () {\r\n    return {\r\n      windows: this.$store.getters.getWindows,\r\n      windowComponents: {},\r\n    };\r\n  },\r\n  components: {\r\n    Window,\r\n    Navbar,\r\n    AppGrid,\r\n    Placeholder,\r\n    FilesWindow,\r\n    ImagePreviewWindow,\r\n    Photos,\r\n    Bio,\r\n    Resume,\r\n    Nossaflex,\r\n    Mail,\r\n    StartMenu,\r\n    Webos,\r\n    Opensource,\r\n    Wwdc2021,\r\n    Wwdc2022,\r\n    // TopNavbar,\r\n  },\r\n  computed: {\r\n    style() {\r\n      return {\r\n        \"--fullscreen\": this.$store.getters.getFullscreenWindowHeight,\r\n      };\r\n    },\r\n  },\r\n  mounted() {\r\n    /*-------------------------------------------------*\\\r\n            This fixes height problems for mobile devices \r\n\r\n            Code is detecting height of navbar and setting\r\n            respective heights of screen\r\n        \\*-------------------------------------------------*/\r\n\r\n    let navbar = document.getElementById(\"navbar\");\r\n    let topnavbar = document.getElementById(\"top-navbar\");\r\n    let topNavbarHeight = topnavbar.clientHeight;\r\n    let navbarHeight = navbar.clientHeight;\r\n\r\n    document.getElementById(\"screen\").style.height =\r\n      window.innerHeight - navbarHeight - topNavbarHeight + \"px\";\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      let vh = window.innerHeight * 0.01;\r\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n    });\r\n\r\n    function resetHeight() {\r\n      document.body.style.height = window.innerHeight + \"px\";\r\n      document.html.style.height = window.innerHeight + \"px\";\r\n    }\r\n    window.addEventListener(\"resize\", resetHeight);\r\n    this.$store.commit(\r\n      \"setFullscreenWindowHeight\",\r\n      window.innerHeight - navbarHeight - topNavbarHeight + \"px\"\r\n    );\r\n\r\n    const newPhotoWindowPayload = {\r\n      windowId: \"PhotosWindow\",\r\n      windowState: \"close\",\r\n      displayName: \"Photos\",\r\n      windowComponent: \"FilesWindow\",\r\n      windowContent: \"\",\r\n      windowContentPadding: {\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n      position: \"absolute\",\r\n      positionX: \"6vw\",\r\n      positionY: \"12vh\",\r\n      iconImage: \"photos.png\",\r\n      altText: \"Photos\",\r\n      fullscreen: false,\r\n      showInAppGrid: true,\r\n      showInNavbar: true,\r\n      // imagePreview: '',\r\n      folderContent: this.$store.getters.getPhotoFiles,\r\n      folderSize: 239217323,\r\n    };\r\n    this.$store.commit(\"pushNewWindow\", newPhotoWindowPayload);\r\n\r\n    this.openWindow(\"BiographyWindow\");\r\n  },\r\n  methods: {\r\n    openWindow(windowId) {\r\n      const payload = {\r\n        windowState: \"open\",\r\n        windowID: windowId,\r\n      };\r\n      this.$store.commit(\"setWindowState\", payload);\r\n    },\r\n\r\n    windowCheck(windowId) {\r\n      if (this.$store.getters.getWindowById(windowId).windowState == \"open\") {\r\n        return true;\r\n      }\r\n    },\r\n\r\n    deinitWindows() {\r\n      if (this.$store.getters.getActiveWindow == \"Menu\") {\r\n        console.log(\"deinitWindows\");\r\n        this.$store.commit(\"setActiveWindow\", \"\");\r\n        setTimeout(() => {\r\n          this.$store.commit(\"zIndexIncrement\", \"\");\r\n        }, 0);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}